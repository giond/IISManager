//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IISManager.DiscountAspServiceClient {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://api.discountasp.net/", ConfigurationName="DiscountAspServiceClient.CustomerApiSoap")]
    public interface CustomerApiSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/GetJobStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.JobStatus GetJobStatus(string key, System.Guid jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/GetJobStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.JobStatus> GetJobStatusAsync(string key, System.Guid jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/VerifyKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool VerifyKey(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/VerifyKey", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> VerifyKeyAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/GetNews", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetNews(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/GetNews", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetNewsAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DiskQuotaGetUsageTotal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DiskQuotaGetUsageTotal(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DiskQuotaGetUsageTotal", ReplyAction="*")]
        System.Threading.Tasks.Task<int> DiskQuotaGetUsageTotalAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DiskQuotaGetUsage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.UserUsage DiskQuotaGetUsage(string key, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DiskQuotaGetUsage", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.UserUsage> DiskQuotaGetUsageAsync(string key, string userName);
        
        // CODEGEN: Parameter 'DiskQuotaGetUsagesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DiskQuotaGetUsages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesResponse DiskQuotaGetUsages(IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DiskQuotaGetUsages", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesResponse> DiskQuotaGetUsagesAsync(IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/BandwidthGetUsage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BandwidthGetUsage(string key, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/BandwidthGetUsage", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BandwidthGetUsageAsync(string key, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsGetARecords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.DnsARecord[] DnsGetARecords(string key, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsGetARecords", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DnsARecord[]> DnsGetARecordsAsync(string key, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsAddARecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DnsAddARecord(string key, string domain, string subDomain, string ipAddress, int timeToLive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsAddARecord", ReplyAction="*")]
        System.Threading.Tasks.Task DnsAddARecordAsync(string key, string domain, string subDomain, string ipAddress, int timeToLive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsDeleteARecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DnsDeleteARecord(string key, string domain, string subDomain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsDeleteARecord", ReplyAction="*")]
        System.Threading.Tasks.Task DnsDeleteARecordAsync(string key, string domain, string subDomain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsGetCnameRecords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.DnsCnameRecord[] DnsGetCnameRecords(string key, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsGetCnameRecords", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DnsCnameRecord[]> DnsGetCnameRecordsAsync(string key, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsAddCnameRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DnsAddCnameRecord(string key, string domain, string subDomain, string destination, int timeToLive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsAddCnameRecord", ReplyAction="*")]
        System.Threading.Tasks.Task DnsAddCnameRecordAsync(string key, string domain, string subDomain, string destination, int timeToLive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsDeleteCnameRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DnsDeleteCnameRecord(string key, string domain, string subDomain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsDeleteCnameRecord", ReplyAction="*")]
        System.Threading.Tasks.Task DnsDeleteCnameRecordAsync(string key, string domain, string subDomain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsGetMxRecords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.DnsMxRecord[] DnsGetMxRecords(string key, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsGetMxRecords", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DnsMxRecord[]> DnsGetMxRecordsAsync(string key, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsAddMxRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DnsAddMxRecord(string key, string domain, string subDomain, string destination, int distance, int timeToLive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsAddMxRecord", ReplyAction="*")]
        System.Threading.Tasks.Task DnsAddMxRecordAsync(string key, string domain, string subDomain, string destination, int distance, int timeToLive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsDeleteMxRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DnsDeleteMxRecord(string key, string domain, string subDomain, string destination, int distance, int timeToLive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsDeleteMxRecord", ReplyAction="*")]
        System.Threading.Tasks.Task DnsDeleteMxRecordAsync(string key, string domain, string subDomain, string destination, int distance, int timeToLive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsGetTxtRecords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.DnsTxtRecord[] DnsGetTxtRecords(string key, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsGetTxtRecords", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DnsTxtRecord[]> DnsGetTxtRecordsAsync(string key, string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsAddTxtRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DnsAddTxtRecord(string key, string domain, string subDomain, string txtData, int timeToLive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsAddTxtRecord", ReplyAction="*")]
        System.Threading.Tasks.Task DnsAddTxtRecordAsync(string key, string domain, string subDomain, string txtData, int timeToLive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsDeleteTxtRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DnsDeleteTxtRecord(string key, string domain, string subDomain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/DnsDeleteTxtRecord", ReplyAction="*")]
        System.Threading.Tasks.Task DnsDeleteTxtRecordAsync(string key, string domain, string subDomain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/IisRecycleApplicationPool", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void IisRecycleApplicationPool(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/IisRecycleApplicationPool", ReplyAction="*")]
        System.Threading.Tasks.Task IisRecycleApplicationPoolAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/IisStopSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void IisStopSite(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/IisStopSite", ReplyAction="*")]
        System.Threading.Tasks.Task IisStopSiteAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/IisStartSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void IisStartSite(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/IisStartSite", ReplyAction="*")]
        System.Threading.Tasks.Task IisStartSiteAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMGetAllUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.SMUser[] SMGetAllUsers(string key, string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMGetAllUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.SMUser[]> SMGetAllUsersAsync(string key, string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMGetAllAliases", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.SMAlias[] SMGetAllAliases(string key, string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMGetAllAliases", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.SMAlias[]> SMGetAllAliasesAsync(string key, string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMDeleteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SMDeleteUser(string key, string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMDeleteUser", ReplyAction="*")]
        System.Threading.Tasks.Task SMDeleteUserAsync(string key, string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMDeleteAlias", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SMDeleteAlias(string key, string domainName, string aliasName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMDeleteAlias", ReplyAction="*")]
        System.Threading.Tasks.Task SMDeleteAliasAsync(string key, string domainName, string aliasName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMAddUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SMAddUser(string key, string domainName, string userName, string password, string firstName, string lastName, int maxMailboxSizeInMB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMAddUser", ReplyAction="*")]
        System.Threading.Tasks.Task SMAddUserAsync(string key, string domainName, string userName, string password, string firstName, string lastName, int maxMailboxSizeInMB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMAddAlias", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SMAddAlias(string key, string domainName, string aliasName, string[] addresses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMAddAlias", ReplyAction="*")]
        System.Threading.Tasks.Task SMAddAliasAsync(string key, string domainName, string aliasName, string[] addresses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMUpdateUserPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SMUpdateUserPassword(string key, string domainName, string userName, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMUpdateUserPassword", ReplyAction="*")]
        System.Threading.Tasks.Task SMUpdateUserPasswordAsync(string key, string domainName, string userName, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMUpdateUserMaxMailboxSize", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SMUpdateUserMaxMailboxSize(string key, string domainName, string userName, int newMaxMailboxSizeInMB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMUpdateUserMaxMailboxSize", ReplyAction="*")]
        System.Threading.Tasks.Task SMUpdateUserMaxMailboxSizeAsync(string key, string domainName, string userName, int newMaxMailboxSizeInMB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMUpdateAliasAddresses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SMUpdateAliasAddresses(string key, string domainName, string aliasName, string[] newAddresses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/SMUpdateAliasAddresses", ReplyAction="*")]
        System.Threading.Tasks.Task SMUpdateAliasAddressesAsync(string key, string domainName, string aliasName, string[] newAddresses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2000GetUsage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.DbUsageResult Sql2000GetUsage(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2000GetUsage", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> Sql2000GetUsageAsync(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2000CreateBackup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Sql2000CreateBackup(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2000CreateBackup", ReplyAction="*")]
        System.Threading.Tasks.Task Sql2000CreateBackupAsync(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2000CreateBackupJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Guid Sql2000CreateBackupJob(string key, string databaseName, bool compressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2000CreateBackupJob", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Guid> Sql2000CreateBackupJobAsync(string key, string databaseName, bool compressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2005GetUsage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.DbUsageResult Sql2005GetUsage(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2005GetUsage", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> Sql2005GetUsageAsync(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2005CreateBackup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Sql2005CreateBackup(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2005CreateBackup", ReplyAction="*")]
        System.Threading.Tasks.Task Sql2005CreateBackupAsync(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2005CreateBackupJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Guid Sql2005CreateBackupJob(string key, string databaseName, bool compressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2005CreateBackupJob", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Guid> Sql2005CreateBackupJobAsync(string key, string databaseName, bool compressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2008GetUsage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.DbUsageResult Sql2008GetUsage(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2008GetUsage", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> Sql2008GetUsageAsync(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2008CreateBackup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Sql2008CreateBackup(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2008CreateBackup", ReplyAction="*")]
        System.Threading.Tasks.Task Sql2008CreateBackupAsync(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2008CreateBackupJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Guid Sql2008CreateBackupJob(string key, string databaseName, bool compressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2008CreateBackupJob", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Guid> Sql2008CreateBackupJobAsync(string key, string databaseName, bool compressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2008R2GetUsage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.DbUsageResult Sql2008R2GetUsage(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2008R2GetUsage", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> Sql2008R2GetUsageAsync(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2008R2CreateBackup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Sql2008R2CreateBackup(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2008R2CreateBackup", ReplyAction="*")]
        System.Threading.Tasks.Task Sql2008R2CreateBackupAsync(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2008R2CreateBackupJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Guid Sql2008R2CreateBackupJob(string key, string databaseName, bool compressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2008R2CreateBackupJob", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Guid> Sql2008R2CreateBackupJobAsync(string key, string databaseName, bool compressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2012GetUsage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.DbUsageResult Sql2012GetUsage(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2012GetUsage", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> Sql2012GetUsageAsync(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2012CreateBackup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Sql2012CreateBackup(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2012CreateBackup", ReplyAction="*")]
        System.Threading.Tasks.Task Sql2012CreateBackupAsync(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2012CreateBackupJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Guid Sql2012CreateBackupJob(string key, string databaseName, bool compressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2012CreateBackupJob", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Guid> Sql2012CreateBackupJobAsync(string key, string databaseName, bool compressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2014GetUsage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.DbUsageResult Sql2014GetUsage(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2014GetUsage", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> Sql2014GetUsageAsync(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2014CreateBackup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Sql2014CreateBackup(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2014CreateBackup", ReplyAction="*")]
        System.Threading.Tasks.Task Sql2014CreateBackupAsync(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2014CreateBackupJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Guid Sql2014CreateBackupJob(string key, string databaseName, bool compressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/Sql2014CreateBackupJob", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Guid> Sql2014CreateBackupJobAsync(string key, string databaseName, bool compressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/MySqlGetUsage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IISManager.DiscountAspServiceClient.DbUsageResult MySqlGetUsage(string key, string databaseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.discountasp.net/MySqlGetUsage", ReplyAction="*")]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> MySqlGetUsageAsync(string key, string databaseName);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.discountasp.net/")]
    public partial class JobStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string jobNameField;
        
        private string statusField;
        
        private System.Nullable<System.DateTime> startDateTimeField;
        
        private System.Nullable<System.DateTime> completedDateTimeField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string JobName {
            get {
                return this.jobNameField;
            }
            set {
                this.jobNameField = value;
                this.RaisePropertyChanged("JobName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<System.DateTime> StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
                this.RaisePropertyChanged("StartDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<System.DateTime> CompletedDateTime {
            get {
                return this.completedDateTimeField;
            }
            set {
                this.completedDateTimeField = value;
                this.RaisePropertyChanged("CompletedDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.discountasp.net/")]
    public partial class DbUsageResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int usageField;
        
        private int quotaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Usage {
            get {
                return this.usageField;
            }
            set {
                this.usageField = value;
                this.RaisePropertyChanged("Usage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Quota {
            get {
                return this.quotaField;
            }
            set {
                this.quotaField = value;
                this.RaisePropertyChanged("Quota");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.discountasp.net/")]
    public partial class SMAlias : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string emailAddressField;
        
        private string[] addressesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
                this.RaisePropertyChanged("EmailAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] Addresses {
            get {
                return this.addressesField;
            }
            set {
                this.addressesField = value;
                this.RaisePropertyChanged("Addresses");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.discountasp.net/")]
    public partial class SMUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string emailAddressField;
        
        private string passwordField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private int maxMailboxSizeInMBField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
                this.RaisePropertyChanged("EmailAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int MaxMailboxSizeInMB {
            get {
                return this.maxMailboxSizeInMBField;
            }
            set {
                this.maxMailboxSizeInMBField = value;
                this.RaisePropertyChanged("MaxMailboxSizeInMB");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.discountasp.net/")]
    public partial class DnsTxtRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string domainField;
        
        private string subDomainField;
        
        private string txtDataField;
        
        private int timeToLiveField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
                this.RaisePropertyChanged("domain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string subDomain {
            get {
                return this.subDomainField;
            }
            set {
                this.subDomainField = value;
                this.RaisePropertyChanged("subDomain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string txtData {
            get {
                return this.txtDataField;
            }
            set {
                this.txtDataField = value;
                this.RaisePropertyChanged("txtData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int timeToLive {
            get {
                return this.timeToLiveField;
            }
            set {
                this.timeToLiveField = value;
                this.RaisePropertyChanged("timeToLive");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.discountasp.net/")]
    public partial class DnsMxRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string domainField;
        
        private string subDomainField;
        
        private string destinationField;
        
        private int distanceField;
        
        private int timeToLiveField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
                this.RaisePropertyChanged("domain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string subDomain {
            get {
                return this.subDomainField;
            }
            set {
                this.subDomainField = value;
                this.RaisePropertyChanged("subDomain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string destination {
            get {
                return this.destinationField;
            }
            set {
                this.destinationField = value;
                this.RaisePropertyChanged("destination");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
                this.RaisePropertyChanged("distance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int timeToLive {
            get {
                return this.timeToLiveField;
            }
            set {
                this.timeToLiveField = value;
                this.RaisePropertyChanged("timeToLive");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.discountasp.net/")]
    public partial class DnsCnameRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string domainField;
        
        private string subDomainField;
        
        private string destinationField;
        
        private int timeToLiveField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
                this.RaisePropertyChanged("domain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string subDomain {
            get {
                return this.subDomainField;
            }
            set {
                this.subDomainField = value;
                this.RaisePropertyChanged("subDomain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string destination {
            get {
                return this.destinationField;
            }
            set {
                this.destinationField = value;
                this.RaisePropertyChanged("destination");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int timeToLive {
            get {
                return this.timeToLiveField;
            }
            set {
                this.timeToLiveField = value;
                this.RaisePropertyChanged("timeToLive");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.discountasp.net/")]
    public partial class DnsARecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string domainField;
        
        private string subDomainField;
        
        private string ipAddressField;
        
        private int timeToLiveField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
                this.RaisePropertyChanged("domain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string subDomain {
            get {
                return this.subDomainField;
            }
            set {
                this.subDomainField = value;
                this.RaisePropertyChanged("subDomain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ipAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
                this.RaisePropertyChanged("ipAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int timeToLive {
            get {
                return this.timeToLiveField;
            }
            set {
                this.timeToLiveField = value;
                this.RaisePropertyChanged("timeToLive");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.discountasp.net/")]
    public partial class UserUsage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userNameField;
        
        private int usageField;
        
        private int quotaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Usage {
            get {
                return this.usageField;
            }
            set {
                this.usageField = value;
                this.RaisePropertyChanged("Usage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Quota {
            get {
                return this.quotaField;
            }
            set {
                this.quotaField = value;
                this.RaisePropertyChanged("Quota");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DiskQuotaGetUsages", WrapperNamespace="http://api.discountasp.net/", IsWrapped=true)]
    public partial class DiskQuotaGetUsagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.discountasp.net/", Order=0)]
        public string key;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.discountasp.net/", Order=1)]
        public string[] userNames;
        
        public DiskQuotaGetUsagesRequest() {
        }
        
        public DiskQuotaGetUsagesRequest(string key, string[] userNames) {
            this.key = key;
            this.userNames = userNames;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DiskQuotaGetUsagesResponse", WrapperNamespace="http://api.discountasp.net/", IsWrapped=true)]
    public partial class DiskQuotaGetUsagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.discountasp.net/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public IISManager.DiscountAspServiceClient.UserUsage[] DiskQuotaGetUsagesResult;
        
        public DiskQuotaGetUsagesResponse() {
        }
        
        public DiskQuotaGetUsagesResponse(IISManager.DiscountAspServiceClient.UserUsage[] DiskQuotaGetUsagesResult) {
            this.DiskQuotaGetUsagesResult = DiskQuotaGetUsagesResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CustomerApiSoapChannel : IISManager.DiscountAspServiceClient.CustomerApiSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerApiSoapClient : System.ServiceModel.ClientBase<IISManager.DiscountAspServiceClient.CustomerApiSoap>, IISManager.DiscountAspServiceClient.CustomerApiSoap {
        
        public CustomerApiSoapClient() {
        }
        
        public CustomerApiSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerApiSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerApiSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerApiSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IISManager.DiscountAspServiceClient.JobStatus GetJobStatus(string key, System.Guid jobId) {
            return base.Channel.GetJobStatus(key, jobId);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.JobStatus> GetJobStatusAsync(string key, System.Guid jobId) {
            return base.Channel.GetJobStatusAsync(key, jobId);
        }
        
        public bool VerifyKey(string key) {
            return base.Channel.VerifyKey(key);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyKeyAsync(string key) {
            return base.Channel.VerifyKeyAsync(key);
        }
        
        public System.Data.DataSet GetNews(string key) {
            return base.Channel.GetNews(key);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetNewsAsync(string key) {
            return base.Channel.GetNewsAsync(key);
        }
        
        public int DiskQuotaGetUsageTotal(string key) {
            return base.Channel.DiskQuotaGetUsageTotal(key);
        }
        
        public System.Threading.Tasks.Task<int> DiskQuotaGetUsageTotalAsync(string key) {
            return base.Channel.DiskQuotaGetUsageTotalAsync(key);
        }
        
        public IISManager.DiscountAspServiceClient.UserUsage DiskQuotaGetUsage(string key, string userName) {
            return base.Channel.DiskQuotaGetUsage(key, userName);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.UserUsage> DiskQuotaGetUsageAsync(string key, string userName) {
            return base.Channel.DiskQuotaGetUsageAsync(key, userName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesResponse IISManager.DiscountAspServiceClient.CustomerApiSoap.DiskQuotaGetUsages(IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesRequest request) {
            return base.Channel.DiskQuotaGetUsages(request);
        }
        
        public IISManager.DiscountAspServiceClient.UserUsage[] DiskQuotaGetUsages(string key, string[] userNames) {
            IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesRequest inValue = new IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesRequest();
            inValue.key = key;
            inValue.userNames = userNames;
            IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesResponse retVal = ((IISManager.DiscountAspServiceClient.CustomerApiSoap)(this)).DiskQuotaGetUsages(inValue);
            return retVal.DiskQuotaGetUsagesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesResponse> IISManager.DiscountAspServiceClient.CustomerApiSoap.DiskQuotaGetUsagesAsync(IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesRequest request) {
            return base.Channel.DiskQuotaGetUsagesAsync(request);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesResponse> DiskQuotaGetUsagesAsync(string key, string[] userNames) {
            IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesRequest inValue = new IISManager.DiscountAspServiceClient.DiskQuotaGetUsagesRequest();
            inValue.key = key;
            inValue.userNames = userNames;
            return ((IISManager.DiscountAspServiceClient.CustomerApiSoap)(this)).DiskQuotaGetUsagesAsync(inValue);
        }
        
        public System.Data.DataSet BandwidthGetUsage(string key, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.BandwidthGetUsage(key, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BandwidthGetUsageAsync(string key, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.BandwidthGetUsageAsync(key, startDate, endDate);
        }
        
        public IISManager.DiscountAspServiceClient.DnsARecord[] DnsGetARecords(string key, string domain) {
            return base.Channel.DnsGetARecords(key, domain);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DnsARecord[]> DnsGetARecordsAsync(string key, string domain) {
            return base.Channel.DnsGetARecordsAsync(key, domain);
        }
        
        public void DnsAddARecord(string key, string domain, string subDomain, string ipAddress, int timeToLive) {
            base.Channel.DnsAddARecord(key, domain, subDomain, ipAddress, timeToLive);
        }
        
        public System.Threading.Tasks.Task DnsAddARecordAsync(string key, string domain, string subDomain, string ipAddress, int timeToLive) {
            return base.Channel.DnsAddARecordAsync(key, domain, subDomain, ipAddress, timeToLive);
        }
        
        public void DnsDeleteARecord(string key, string domain, string subDomain) {
            base.Channel.DnsDeleteARecord(key, domain, subDomain);
        }
        
        public System.Threading.Tasks.Task DnsDeleteARecordAsync(string key, string domain, string subDomain) {
            return base.Channel.DnsDeleteARecordAsync(key, domain, subDomain);
        }
        
        public IISManager.DiscountAspServiceClient.DnsCnameRecord[] DnsGetCnameRecords(string key, string domain) {
            return base.Channel.DnsGetCnameRecords(key, domain);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DnsCnameRecord[]> DnsGetCnameRecordsAsync(string key, string domain) {
            return base.Channel.DnsGetCnameRecordsAsync(key, domain);
        }
        
        public void DnsAddCnameRecord(string key, string domain, string subDomain, string destination, int timeToLive) {
            base.Channel.DnsAddCnameRecord(key, domain, subDomain, destination, timeToLive);
        }
        
        public System.Threading.Tasks.Task DnsAddCnameRecordAsync(string key, string domain, string subDomain, string destination, int timeToLive) {
            return base.Channel.DnsAddCnameRecordAsync(key, domain, subDomain, destination, timeToLive);
        }
        
        public void DnsDeleteCnameRecord(string key, string domain, string subDomain) {
            base.Channel.DnsDeleteCnameRecord(key, domain, subDomain);
        }
        
        public System.Threading.Tasks.Task DnsDeleteCnameRecordAsync(string key, string domain, string subDomain) {
            return base.Channel.DnsDeleteCnameRecordAsync(key, domain, subDomain);
        }
        
        public IISManager.DiscountAspServiceClient.DnsMxRecord[] DnsGetMxRecords(string key, string domain) {
            return base.Channel.DnsGetMxRecords(key, domain);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DnsMxRecord[]> DnsGetMxRecordsAsync(string key, string domain) {
            return base.Channel.DnsGetMxRecordsAsync(key, domain);
        }
        
        public void DnsAddMxRecord(string key, string domain, string subDomain, string destination, int distance, int timeToLive) {
            base.Channel.DnsAddMxRecord(key, domain, subDomain, destination, distance, timeToLive);
        }
        
        public System.Threading.Tasks.Task DnsAddMxRecordAsync(string key, string domain, string subDomain, string destination, int distance, int timeToLive) {
            return base.Channel.DnsAddMxRecordAsync(key, domain, subDomain, destination, distance, timeToLive);
        }
        
        public void DnsDeleteMxRecord(string key, string domain, string subDomain, string destination, int distance, int timeToLive) {
            base.Channel.DnsDeleteMxRecord(key, domain, subDomain, destination, distance, timeToLive);
        }
        
        public System.Threading.Tasks.Task DnsDeleteMxRecordAsync(string key, string domain, string subDomain, string destination, int distance, int timeToLive) {
            return base.Channel.DnsDeleteMxRecordAsync(key, domain, subDomain, destination, distance, timeToLive);
        }
        
        public IISManager.DiscountAspServiceClient.DnsTxtRecord[] DnsGetTxtRecords(string key, string domain) {
            return base.Channel.DnsGetTxtRecords(key, domain);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DnsTxtRecord[]> DnsGetTxtRecordsAsync(string key, string domain) {
            return base.Channel.DnsGetTxtRecordsAsync(key, domain);
        }
        
        public void DnsAddTxtRecord(string key, string domain, string subDomain, string txtData, int timeToLive) {
            base.Channel.DnsAddTxtRecord(key, domain, subDomain, txtData, timeToLive);
        }
        
        public System.Threading.Tasks.Task DnsAddTxtRecordAsync(string key, string domain, string subDomain, string txtData, int timeToLive) {
            return base.Channel.DnsAddTxtRecordAsync(key, domain, subDomain, txtData, timeToLive);
        }
        
        public void DnsDeleteTxtRecord(string key, string domain, string subDomain) {
            base.Channel.DnsDeleteTxtRecord(key, domain, subDomain);
        }
        
        public System.Threading.Tasks.Task DnsDeleteTxtRecordAsync(string key, string domain, string subDomain) {
            return base.Channel.DnsDeleteTxtRecordAsync(key, domain, subDomain);
        }
        
        public void IisRecycleApplicationPool(string key) {
            base.Channel.IisRecycleApplicationPool(key);
        }
        
        public System.Threading.Tasks.Task IisRecycleApplicationPoolAsync(string key) {
            return base.Channel.IisRecycleApplicationPoolAsync(key);
        }
        
        public void IisStopSite(string key) {
            base.Channel.IisStopSite(key);
        }
        
        public System.Threading.Tasks.Task IisStopSiteAsync(string key) {
            return base.Channel.IisStopSiteAsync(key);
        }
        
        public void IisStartSite(string key) {
            base.Channel.IisStartSite(key);
        }
        
        public System.Threading.Tasks.Task IisStartSiteAsync(string key) {
            return base.Channel.IisStartSiteAsync(key);
        }
        
        public IISManager.DiscountAspServiceClient.SMUser[] SMGetAllUsers(string key, string domainName) {
            return base.Channel.SMGetAllUsers(key, domainName);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.SMUser[]> SMGetAllUsersAsync(string key, string domainName) {
            return base.Channel.SMGetAllUsersAsync(key, domainName);
        }
        
        public IISManager.DiscountAspServiceClient.SMAlias[] SMGetAllAliases(string key, string domainName) {
            return base.Channel.SMGetAllAliases(key, domainName);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.SMAlias[]> SMGetAllAliasesAsync(string key, string domainName) {
            return base.Channel.SMGetAllAliasesAsync(key, domainName);
        }
        
        public void SMDeleteUser(string key, string domainName, string userName) {
            base.Channel.SMDeleteUser(key, domainName, userName);
        }
        
        public System.Threading.Tasks.Task SMDeleteUserAsync(string key, string domainName, string userName) {
            return base.Channel.SMDeleteUserAsync(key, domainName, userName);
        }
        
        public void SMDeleteAlias(string key, string domainName, string aliasName) {
            base.Channel.SMDeleteAlias(key, domainName, aliasName);
        }
        
        public System.Threading.Tasks.Task SMDeleteAliasAsync(string key, string domainName, string aliasName) {
            return base.Channel.SMDeleteAliasAsync(key, domainName, aliasName);
        }
        
        public void SMAddUser(string key, string domainName, string userName, string password, string firstName, string lastName, int maxMailboxSizeInMB) {
            base.Channel.SMAddUser(key, domainName, userName, password, firstName, lastName, maxMailboxSizeInMB);
        }
        
        public System.Threading.Tasks.Task SMAddUserAsync(string key, string domainName, string userName, string password, string firstName, string lastName, int maxMailboxSizeInMB) {
            return base.Channel.SMAddUserAsync(key, domainName, userName, password, firstName, lastName, maxMailboxSizeInMB);
        }
        
        public void SMAddAlias(string key, string domainName, string aliasName, string[] addresses) {
            base.Channel.SMAddAlias(key, domainName, aliasName, addresses);
        }
        
        public System.Threading.Tasks.Task SMAddAliasAsync(string key, string domainName, string aliasName, string[] addresses) {
            return base.Channel.SMAddAliasAsync(key, domainName, aliasName, addresses);
        }
        
        public void SMUpdateUserPassword(string key, string domainName, string userName, string newPassword) {
            base.Channel.SMUpdateUserPassword(key, domainName, userName, newPassword);
        }
        
        public System.Threading.Tasks.Task SMUpdateUserPasswordAsync(string key, string domainName, string userName, string newPassword) {
            return base.Channel.SMUpdateUserPasswordAsync(key, domainName, userName, newPassword);
        }
        
        public void SMUpdateUserMaxMailboxSize(string key, string domainName, string userName, int newMaxMailboxSizeInMB) {
            base.Channel.SMUpdateUserMaxMailboxSize(key, domainName, userName, newMaxMailboxSizeInMB);
        }
        
        public System.Threading.Tasks.Task SMUpdateUserMaxMailboxSizeAsync(string key, string domainName, string userName, int newMaxMailboxSizeInMB) {
            return base.Channel.SMUpdateUserMaxMailboxSizeAsync(key, domainName, userName, newMaxMailboxSizeInMB);
        }
        
        public void SMUpdateAliasAddresses(string key, string domainName, string aliasName, string[] newAddresses) {
            base.Channel.SMUpdateAliasAddresses(key, domainName, aliasName, newAddresses);
        }
        
        public System.Threading.Tasks.Task SMUpdateAliasAddressesAsync(string key, string domainName, string aliasName, string[] newAddresses) {
            return base.Channel.SMUpdateAliasAddressesAsync(key, domainName, aliasName, newAddresses);
        }
        
        public IISManager.DiscountAspServiceClient.DbUsageResult Sql2000GetUsage(string key, string databaseName) {
            return base.Channel.Sql2000GetUsage(key, databaseName);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> Sql2000GetUsageAsync(string key, string databaseName) {
            return base.Channel.Sql2000GetUsageAsync(key, databaseName);
        }
        
        public void Sql2000CreateBackup(string key, string databaseName) {
            base.Channel.Sql2000CreateBackup(key, databaseName);
        }
        
        public System.Threading.Tasks.Task Sql2000CreateBackupAsync(string key, string databaseName) {
            return base.Channel.Sql2000CreateBackupAsync(key, databaseName);
        }
        
        public System.Guid Sql2000CreateBackupJob(string key, string databaseName, bool compressed) {
            return base.Channel.Sql2000CreateBackupJob(key, databaseName, compressed);
        }
        
        public System.Threading.Tasks.Task<System.Guid> Sql2000CreateBackupJobAsync(string key, string databaseName, bool compressed) {
            return base.Channel.Sql2000CreateBackupJobAsync(key, databaseName, compressed);
        }
        
        public IISManager.DiscountAspServiceClient.DbUsageResult Sql2005GetUsage(string key, string databaseName) {
            return base.Channel.Sql2005GetUsage(key, databaseName);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> Sql2005GetUsageAsync(string key, string databaseName) {
            return base.Channel.Sql2005GetUsageAsync(key, databaseName);
        }
        
        public void Sql2005CreateBackup(string key, string databaseName) {
            base.Channel.Sql2005CreateBackup(key, databaseName);
        }
        
        public System.Threading.Tasks.Task Sql2005CreateBackupAsync(string key, string databaseName) {
            return base.Channel.Sql2005CreateBackupAsync(key, databaseName);
        }
        
        public System.Guid Sql2005CreateBackupJob(string key, string databaseName, bool compressed) {
            return base.Channel.Sql2005CreateBackupJob(key, databaseName, compressed);
        }
        
        public System.Threading.Tasks.Task<System.Guid> Sql2005CreateBackupJobAsync(string key, string databaseName, bool compressed) {
            return base.Channel.Sql2005CreateBackupJobAsync(key, databaseName, compressed);
        }
        
        public IISManager.DiscountAspServiceClient.DbUsageResult Sql2008GetUsage(string key, string databaseName) {
            return base.Channel.Sql2008GetUsage(key, databaseName);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> Sql2008GetUsageAsync(string key, string databaseName) {
            return base.Channel.Sql2008GetUsageAsync(key, databaseName);
        }
        
        public void Sql2008CreateBackup(string key, string databaseName) {
            base.Channel.Sql2008CreateBackup(key, databaseName);
        }
        
        public System.Threading.Tasks.Task Sql2008CreateBackupAsync(string key, string databaseName) {
            return base.Channel.Sql2008CreateBackupAsync(key, databaseName);
        }
        
        public System.Guid Sql2008CreateBackupJob(string key, string databaseName, bool compressed) {
            return base.Channel.Sql2008CreateBackupJob(key, databaseName, compressed);
        }
        
        public System.Threading.Tasks.Task<System.Guid> Sql2008CreateBackupJobAsync(string key, string databaseName, bool compressed) {
            return base.Channel.Sql2008CreateBackupJobAsync(key, databaseName, compressed);
        }
        
        public IISManager.DiscountAspServiceClient.DbUsageResult Sql2008R2GetUsage(string key, string databaseName) {
            return base.Channel.Sql2008R2GetUsage(key, databaseName);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> Sql2008R2GetUsageAsync(string key, string databaseName) {
            return base.Channel.Sql2008R2GetUsageAsync(key, databaseName);
        }
        
        public void Sql2008R2CreateBackup(string key, string databaseName) {
            base.Channel.Sql2008R2CreateBackup(key, databaseName);
        }
        
        public System.Threading.Tasks.Task Sql2008R2CreateBackupAsync(string key, string databaseName) {
            return base.Channel.Sql2008R2CreateBackupAsync(key, databaseName);
        }
        
        public System.Guid Sql2008R2CreateBackupJob(string key, string databaseName, bool compressed) {
            return base.Channel.Sql2008R2CreateBackupJob(key, databaseName, compressed);
        }
        
        public System.Threading.Tasks.Task<System.Guid> Sql2008R2CreateBackupJobAsync(string key, string databaseName, bool compressed) {
            return base.Channel.Sql2008R2CreateBackupJobAsync(key, databaseName, compressed);
        }
        
        public IISManager.DiscountAspServiceClient.DbUsageResult Sql2012GetUsage(string key, string databaseName) {
            return base.Channel.Sql2012GetUsage(key, databaseName);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> Sql2012GetUsageAsync(string key, string databaseName) {
            return base.Channel.Sql2012GetUsageAsync(key, databaseName);
        }
        
        public void Sql2012CreateBackup(string key, string databaseName) {
            base.Channel.Sql2012CreateBackup(key, databaseName);
        }
        
        public System.Threading.Tasks.Task Sql2012CreateBackupAsync(string key, string databaseName) {
            return base.Channel.Sql2012CreateBackupAsync(key, databaseName);
        }
        
        public System.Guid Sql2012CreateBackupJob(string key, string databaseName, bool compressed) {
            return base.Channel.Sql2012CreateBackupJob(key, databaseName, compressed);
        }
        
        public System.Threading.Tasks.Task<System.Guid> Sql2012CreateBackupJobAsync(string key, string databaseName, bool compressed) {
            return base.Channel.Sql2012CreateBackupJobAsync(key, databaseName, compressed);
        }
        
        public IISManager.DiscountAspServiceClient.DbUsageResult Sql2014GetUsage(string key, string databaseName) {
            return base.Channel.Sql2014GetUsage(key, databaseName);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> Sql2014GetUsageAsync(string key, string databaseName) {
            return base.Channel.Sql2014GetUsageAsync(key, databaseName);
        }
        
        public void Sql2014CreateBackup(string key, string databaseName) {
            base.Channel.Sql2014CreateBackup(key, databaseName);
        }
        
        public System.Threading.Tasks.Task Sql2014CreateBackupAsync(string key, string databaseName) {
            return base.Channel.Sql2014CreateBackupAsync(key, databaseName);
        }
        
        public System.Guid Sql2014CreateBackupJob(string key, string databaseName, bool compressed) {
            return base.Channel.Sql2014CreateBackupJob(key, databaseName, compressed);
        }
        
        public System.Threading.Tasks.Task<System.Guid> Sql2014CreateBackupJobAsync(string key, string databaseName, bool compressed) {
            return base.Channel.Sql2014CreateBackupJobAsync(key, databaseName, compressed);
        }
        
        public IISManager.DiscountAspServiceClient.DbUsageResult MySqlGetUsage(string key, string databaseName) {
            return base.Channel.MySqlGetUsage(key, databaseName);
        }
        
        public System.Threading.Tasks.Task<IISManager.DiscountAspServiceClient.DbUsageResult> MySqlGetUsageAsync(string key, string databaseName) {
            return base.Channel.MySqlGetUsageAsync(key, databaseName);
        }
    }
}
